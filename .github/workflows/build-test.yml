name: ðŸ”¨ Build Test

on:
  pull_request:
    paths:
      - '**.go'
      - '**.mod'
  workflow_dispatch:

jobs:
  build:
    name: Test Builds
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        run: go build .
        working-directory: cmd/httpx/

      - name: Test
        run: go test ./...
        working-directory: .
        env:
          PDCP_API_KEY: "${{ secrets.PDCP_API_KEY }}"
          

      - name: Testing Example - Simple
        run: go run .
        working-directory: examples/simple/
      - name: Testing Example - Speed Control
        run: go run .
        working-directory: examples/speed_control/

      - name: Integration Tests Linux, macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        env:
          GH_ACTION: true
          PDCP_API_KEY: "${{ secrets.PDCP_API_KEY }}"
        run: bash run.sh
        working-directory: integration_tests/
      
      - name: Integration Tests Windows
        if: runner.os == 'Windows'
        env:
          GH_ACTION: true
          MSYS_NO_PATHCONV: true
          PDCP_API_KEY: "${{ secrets.PDCP_API_KEY }}"
        run: bash run.sh
        working-directory: integration_tests/
        
      - name: Race Condition Tests
        run: go build -race .
        working-directory: cmd/httpx/
